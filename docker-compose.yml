version: "3.1"
services:
  # --------------------------------------
  # Redis
  # --------------------------------------
  sao-redis:
    image: redis:alpine
    container_name: sao-redis
  # --------------------------------------
  # Postgres
  # --------------------------------------
  sao-postgres:
    image: postgres:alpine
    container_name: sao-postgres
    restart: unless-stopped
    volumes:
        - "./backend/esur_db.sql:/docker-entrypoint-initdb.d/esur_db.sql"
        - "./docker/postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - sao_network
  # --------------------------------------
  # Nginx
  # --------------------------------------
  sao-app:
    image: nginx:alpine
    container_name: sao-app
    working_dir: /application
    restart: unless-stopped
    volumes:
        - ./backend:/application
        - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - postgres
    networks:
      - sao_network
  # --------------------------------------
  # Php-fpm
  # --------------------------------------
  sao-php:
    build: docker/php-fpm
    container_name: sao-php
    working_dir: /application
    volumes:
      - ./backend:/application
      - ./docker/php-fpm/php-local.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
    depends_on:
      - postgres
    networks:
      - sao_network
  # --------------------------------------
  # RabbitMQ
  # --------------------------------------
  sao-rabbitmq:
    build:
      context: .
      dockerfile: ./docker/rabbitmq/Dockerfile
    container_name: sao-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "123456789"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "15674:15674"
      - "5672:5672"

networks:
  sao_network:
    driver: bridge
